diff --git a/node_modules/app-store-scraper/lib/reviews.js b/node_modules/app-store-scraper/lib/reviews.js
index 5c8525c..3609cf9 100644
--- a/node_modules/app-store-scraper/lib/reviews.js
+++ b/node_modules/app-store-scraper/lib/reviews.js
@@ -4,6 +4,7 @@ const R = require('ramda');
 const common = require('./common');
 const app = require('./app');
 const c = require('./constants');
+const parseString = require('xml2js').parseString;

 function ensureArray (value) {
   if (!value) {
@@ -46,11 +47,53 @@ const reviews = (opts) => new Promise((resolve) => {
     opts.page = opts.page || 1;
     opts.country = opts.country || 'us';

-    const url = `https://itunes.apple.com/${opts.country}/rss/customerreviews/page=${opts.page}/id=${id}/sortby=${opts.sort}/json`;
+    const url = `https://itunes.apple.com/${opts.country}/rss/customerreviews/page=${opts.page}/id=${id}/sortby=${opts.sort}/xml`;
     return common.request(url, {}, opts.requestOptions);
   })
-  .then(JSON.parse)
-  .then(cleanList);
+  .then(bodyXml => {
+    var data;
+    parseString(bodyXml, function (err, result) {
+      data = result;
+      if (err) {
+        console.log(err)
+      }
+    });
+
+    var comments = [];
+    var entry = data['feed']['entry'];
+    var links = data['feed']['link'];
+
+    if (entry && links) {
+      for (var i = 0; i < entry.length ;i++) {
+        var rawReview = entry[i];
+        if ('author' in rawReview) {
+          try {
+            var comment = [];
+            comment['id'] = rawReview['id'][0];
+            comment['userName'] = rawReview['author'][0]['name'][0];
+            comment['url'] = rawReview['author'][0]['uri'][0];
+            comment['version'] = rawReview['im:version'][0];
+            comment['score'] = rawReview['im:rating'][0];
+            comment['title'] = rawReview['title'][0];
+            comment['text'] = rawReview['content'][0]['_'];
+            comment['vote'] = rawReview['im:voteCount'][0];
+            comment['date'] = rawReview['updated'][0];
+            comment['country'] = 'fr';
+            comment['userType'] = null;
+            comment['userImage'] = null;
+            comment['os'] = 'ios';
+            comment['app'] = comment['os'];
+
+            comments.push(comment);
+          } catch (err) {
+            console.log(err);
+          }
+        }
+      }
+    }
+
+    return comments;
+  });

 function validate (opts) {
   if (!opts.id && !opts.appId) {
